// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rabbitmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-rabbitmq/sdk/v3/go/rabbitmq/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVHost(ctx *pulumi.Context, args *LookupVHostArgs, opts ...pulumi.InvokeOption) (*LookupVHostResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVHostResult
	err := ctx.Invoke("rabbitmq:index/getVHost:getVHost", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVHost.
type LookupVHostArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getVHost.
type LookupVHostResult struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupVHostOutput(ctx *pulumi.Context, args LookupVHostOutputArgs, opts ...pulumi.InvokeOption) LookupVHostResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVHostResultOutput, error) {
			args := v.(LookupVHostArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupVHostResult
			secret, err := ctx.InvokePackageRaw("rabbitmq:index/getVHost:getVHost", args, &rv, "", opts...)
			if err != nil {
				return LookupVHostResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupVHostResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupVHostResultOutput), nil
			}
			return output, nil
		}).(LookupVHostResultOutput)
}

// A collection of arguments for invoking getVHost.
type LookupVHostOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupVHostOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVHostArgs)(nil)).Elem()
}

// A collection of values returned by getVHost.
type LookupVHostResultOutput struct{ *pulumi.OutputState }

func (LookupVHostResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVHostResult)(nil)).Elem()
}

func (o LookupVHostResultOutput) ToLookupVHostResultOutput() LookupVHostResultOutput {
	return o
}

func (o LookupVHostResultOutput) ToLookupVHostResultOutputWithContext(ctx context.Context) LookupVHostResultOutput {
	return o
}

func (o LookupVHostResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVHostResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVHostResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVHostResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVHostResultOutput{})
}
