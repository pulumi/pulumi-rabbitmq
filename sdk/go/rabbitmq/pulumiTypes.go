// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package rabbitmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ExchangeSettings struct {
	Arguments map[string]interface{} `pulumi:"arguments"`
	AutoDelete *bool `pulumi:"autoDelete"`
	Durable *bool `pulumi:"durable"`
	Type string `pulumi:"type"`
}

type ExchangeSettingsInput interface {
	pulumi.Input

	ToExchangeSettingsOutput() ExchangeSettingsOutput
	ToExchangeSettingsOutputWithContext(context.Context) ExchangeSettingsOutput
}

type ExchangeSettingsArgs struct {
	Arguments pulumi.MapInput `pulumi:"arguments"`
	AutoDelete pulumi.BoolPtrInput `pulumi:"autoDelete"`
	Durable pulumi.BoolPtrInput `pulumi:"durable"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExchangeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExchangeSettings)(nil)).Elem()
}

func (i ExchangeSettingsArgs) ToExchangeSettingsOutput() ExchangeSettingsOutput {
	return i.ToExchangeSettingsOutputWithContext(context.Background())
}

func (i ExchangeSettingsArgs) ToExchangeSettingsOutputWithContext(ctx context.Context) ExchangeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExchangeSettingsOutput)
}

func (i ExchangeSettingsArgs) ToExchangeSettingsPtrOutput() ExchangeSettingsPtrOutput {
	return i.ToExchangeSettingsPtrOutputWithContext(context.Background())
}

func (i ExchangeSettingsArgs) ToExchangeSettingsPtrOutputWithContext(ctx context.Context) ExchangeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExchangeSettingsOutput).ToExchangeSettingsPtrOutputWithContext(ctx)
}

type ExchangeSettingsPtrInput interface {
	pulumi.Input

	ToExchangeSettingsPtrOutput() ExchangeSettingsPtrOutput
	ToExchangeSettingsPtrOutputWithContext(context.Context) ExchangeSettingsPtrOutput
}

type exchangeSettingsPtrType ExchangeSettingsArgs

func ExchangeSettingsPtr(v *ExchangeSettingsArgs) ExchangeSettingsPtrInput {	return (*exchangeSettingsPtrType)(v)
}

func (*exchangeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExchangeSettings)(nil)).Elem()
}

func (i *exchangeSettingsPtrType) ToExchangeSettingsPtrOutput() ExchangeSettingsPtrOutput {
	return i.ToExchangeSettingsPtrOutputWithContext(context.Background())
}

func (i *exchangeSettingsPtrType) ToExchangeSettingsPtrOutputWithContext(ctx context.Context) ExchangeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExchangeSettingsPtrOutput)
}

type ExchangeSettingsOutput struct { *pulumi.OutputState }

func (ExchangeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExchangeSettings)(nil)).Elem()
}

func (o ExchangeSettingsOutput) ToExchangeSettingsOutput() ExchangeSettingsOutput {
	return o
}

func (o ExchangeSettingsOutput) ToExchangeSettingsOutputWithContext(ctx context.Context) ExchangeSettingsOutput {
	return o
}

func (o ExchangeSettingsOutput) ToExchangeSettingsPtrOutput() ExchangeSettingsPtrOutput {
	return o.ToExchangeSettingsPtrOutputWithContext(context.Background())
}

func (o ExchangeSettingsOutput) ToExchangeSettingsPtrOutputWithContext(ctx context.Context) ExchangeSettingsPtrOutput {
	return o.ApplyT(func(v ExchangeSettings) *ExchangeSettings {
		return &v
	}).(ExchangeSettingsPtrOutput)
}
func (o ExchangeSettingsOutput) Arguments() pulumi.MapOutput {
	return o.ApplyT(func (v ExchangeSettings) map[string]interface{} { return v.Arguments }).(pulumi.MapOutput)
}

func (o ExchangeSettingsOutput) AutoDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ExchangeSettings) *bool { return v.AutoDelete }).(pulumi.BoolPtrOutput)
}

func (o ExchangeSettingsOutput) Durable() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ExchangeSettings) *bool { return v.Durable }).(pulumi.BoolPtrOutput)
}

func (o ExchangeSettingsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v ExchangeSettings) string { return v.Type }).(pulumi.StringOutput)
}

type ExchangeSettingsPtrOutput struct { *pulumi.OutputState}

func (ExchangeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExchangeSettings)(nil)).Elem()
}

func (o ExchangeSettingsPtrOutput) ToExchangeSettingsPtrOutput() ExchangeSettingsPtrOutput {
	return o
}

func (o ExchangeSettingsPtrOutput) ToExchangeSettingsPtrOutputWithContext(ctx context.Context) ExchangeSettingsPtrOutput {
	return o
}

func (o ExchangeSettingsPtrOutput) Elem() ExchangeSettingsOutput {
	return o.ApplyT(func (v *ExchangeSettings) ExchangeSettings { return *v }).(ExchangeSettingsOutput)
}

func (o ExchangeSettingsPtrOutput) Arguments() pulumi.MapOutput {
	return o.ApplyT(func (v ExchangeSettings) map[string]interface{} { return v.Arguments }).(pulumi.MapOutput)
}

func (o ExchangeSettingsPtrOutput) AutoDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ExchangeSettings) *bool { return v.AutoDelete }).(pulumi.BoolPtrOutput)
}

func (o ExchangeSettingsPtrOutput) Durable() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ExchangeSettings) *bool { return v.Durable }).(pulumi.BoolPtrOutput)
}

func (o ExchangeSettingsPtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v ExchangeSettings) string { return v.Type }).(pulumi.StringOutput)
}

type PermissionsPermissions struct {
	Configure string `pulumi:"configure"`
	Read string `pulumi:"read"`
	Write string `pulumi:"write"`
}

type PermissionsPermissionsInput interface {
	pulumi.Input

	ToPermissionsPermissionsOutput() PermissionsPermissionsOutput
	ToPermissionsPermissionsOutputWithContext(context.Context) PermissionsPermissionsOutput
}

type PermissionsPermissionsArgs struct {
	Configure pulumi.StringInput `pulumi:"configure"`
	Read pulumi.StringInput `pulumi:"read"`
	Write pulumi.StringInput `pulumi:"write"`
}

func (PermissionsPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsPermissions)(nil)).Elem()
}

func (i PermissionsPermissionsArgs) ToPermissionsPermissionsOutput() PermissionsPermissionsOutput {
	return i.ToPermissionsPermissionsOutputWithContext(context.Background())
}

func (i PermissionsPermissionsArgs) ToPermissionsPermissionsOutputWithContext(ctx context.Context) PermissionsPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsPermissionsOutput)
}

func (i PermissionsPermissionsArgs) ToPermissionsPermissionsPtrOutput() PermissionsPermissionsPtrOutput {
	return i.ToPermissionsPermissionsPtrOutputWithContext(context.Background())
}

func (i PermissionsPermissionsArgs) ToPermissionsPermissionsPtrOutputWithContext(ctx context.Context) PermissionsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsPermissionsOutput).ToPermissionsPermissionsPtrOutputWithContext(ctx)
}

type PermissionsPermissionsPtrInput interface {
	pulumi.Input

	ToPermissionsPermissionsPtrOutput() PermissionsPermissionsPtrOutput
	ToPermissionsPermissionsPtrOutputWithContext(context.Context) PermissionsPermissionsPtrOutput
}

type permissionsPermissionsPtrType PermissionsPermissionsArgs

func PermissionsPermissionsPtr(v *PermissionsPermissionsArgs) PermissionsPermissionsPtrInput {	return (*permissionsPermissionsPtrType)(v)
}

func (*permissionsPermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsPermissions)(nil)).Elem()
}

func (i *permissionsPermissionsPtrType) ToPermissionsPermissionsPtrOutput() PermissionsPermissionsPtrOutput {
	return i.ToPermissionsPermissionsPtrOutputWithContext(context.Background())
}

func (i *permissionsPermissionsPtrType) ToPermissionsPermissionsPtrOutputWithContext(ctx context.Context) PermissionsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsPermissionsPtrOutput)
}

type PermissionsPermissionsOutput struct { *pulumi.OutputState }

func (PermissionsPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsPermissions)(nil)).Elem()
}

func (o PermissionsPermissionsOutput) ToPermissionsPermissionsOutput() PermissionsPermissionsOutput {
	return o
}

func (o PermissionsPermissionsOutput) ToPermissionsPermissionsOutputWithContext(ctx context.Context) PermissionsPermissionsOutput {
	return o
}

func (o PermissionsPermissionsOutput) ToPermissionsPermissionsPtrOutput() PermissionsPermissionsPtrOutput {
	return o.ToPermissionsPermissionsPtrOutputWithContext(context.Background())
}

func (o PermissionsPermissionsOutput) ToPermissionsPermissionsPtrOutputWithContext(ctx context.Context) PermissionsPermissionsPtrOutput {
	return o.ApplyT(func(v PermissionsPermissions) *PermissionsPermissions {
		return &v
	}).(PermissionsPermissionsPtrOutput)
}
func (o PermissionsPermissionsOutput) Configure() pulumi.StringOutput {
	return o.ApplyT(func (v PermissionsPermissions) string { return v.Configure }).(pulumi.StringOutput)
}

func (o PermissionsPermissionsOutput) Read() pulumi.StringOutput {
	return o.ApplyT(func (v PermissionsPermissions) string { return v.Read }).(pulumi.StringOutput)
}

func (o PermissionsPermissionsOutput) Write() pulumi.StringOutput {
	return o.ApplyT(func (v PermissionsPermissions) string { return v.Write }).(pulumi.StringOutput)
}

type PermissionsPermissionsPtrOutput struct { *pulumi.OutputState}

func (PermissionsPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsPermissions)(nil)).Elem()
}

func (o PermissionsPermissionsPtrOutput) ToPermissionsPermissionsPtrOutput() PermissionsPermissionsPtrOutput {
	return o
}

func (o PermissionsPermissionsPtrOutput) ToPermissionsPermissionsPtrOutputWithContext(ctx context.Context) PermissionsPermissionsPtrOutput {
	return o
}

func (o PermissionsPermissionsPtrOutput) Elem() PermissionsPermissionsOutput {
	return o.ApplyT(func (v *PermissionsPermissions) PermissionsPermissions { return *v }).(PermissionsPermissionsOutput)
}

func (o PermissionsPermissionsPtrOutput) Configure() pulumi.StringOutput {
	return o.ApplyT(func (v PermissionsPermissions) string { return v.Configure }).(pulumi.StringOutput)
}

func (o PermissionsPermissionsPtrOutput) Read() pulumi.StringOutput {
	return o.ApplyT(func (v PermissionsPermissions) string { return v.Read }).(pulumi.StringOutput)
}

func (o PermissionsPermissionsPtrOutput) Write() pulumi.StringOutput {
	return o.ApplyT(func (v PermissionsPermissions) string { return v.Write }).(pulumi.StringOutput)
}

type PolicyPolicy struct {
	ApplyTo string `pulumi:"applyTo"`
	Definition map[string]interface{} `pulumi:"definition"`
	Pattern string `pulumi:"pattern"`
	Priority int `pulumi:"priority"`
}

type PolicyPolicyInput interface {
	pulumi.Input

	ToPolicyPolicyOutput() PolicyPolicyOutput
	ToPolicyPolicyOutputWithContext(context.Context) PolicyPolicyOutput
}

type PolicyPolicyArgs struct {
	ApplyTo pulumi.StringInput `pulumi:"applyTo"`
	Definition pulumi.MapInput `pulumi:"definition"`
	Pattern pulumi.StringInput `pulumi:"pattern"`
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (PolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPolicy)(nil)).Elem()
}

func (i PolicyPolicyArgs) ToPolicyPolicyOutput() PolicyPolicyOutput {
	return i.ToPolicyPolicyOutputWithContext(context.Background())
}

func (i PolicyPolicyArgs) ToPolicyPolicyOutputWithContext(ctx context.Context) PolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPolicyOutput)
}

func (i PolicyPolicyArgs) ToPolicyPolicyPtrOutput() PolicyPolicyPtrOutput {
	return i.ToPolicyPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyPolicyArgs) ToPolicyPolicyPtrOutputWithContext(ctx context.Context) PolicyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPolicyOutput).ToPolicyPolicyPtrOutputWithContext(ctx)
}

type PolicyPolicyPtrInput interface {
	pulumi.Input

	ToPolicyPolicyPtrOutput() PolicyPolicyPtrOutput
	ToPolicyPolicyPtrOutputWithContext(context.Context) PolicyPolicyPtrOutput
}

type policyPolicyPtrType PolicyPolicyArgs

func PolicyPolicyPtr(v *PolicyPolicyArgs) PolicyPolicyPtrInput {	return (*policyPolicyPtrType)(v)
}

func (*policyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyPolicy)(nil)).Elem()
}

func (i *policyPolicyPtrType) ToPolicyPolicyPtrOutput() PolicyPolicyPtrOutput {
	return i.ToPolicyPolicyPtrOutputWithContext(context.Background())
}

func (i *policyPolicyPtrType) ToPolicyPolicyPtrOutputWithContext(ctx context.Context) PolicyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPolicyPtrOutput)
}

type PolicyPolicyOutput struct { *pulumi.OutputState }

func (PolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPolicy)(nil)).Elem()
}

func (o PolicyPolicyOutput) ToPolicyPolicyOutput() PolicyPolicyOutput {
	return o
}

func (o PolicyPolicyOutput) ToPolicyPolicyOutputWithContext(ctx context.Context) PolicyPolicyOutput {
	return o
}

func (o PolicyPolicyOutput) ToPolicyPolicyPtrOutput() PolicyPolicyPtrOutput {
	return o.ToPolicyPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyPolicyOutput) ToPolicyPolicyPtrOutputWithContext(ctx context.Context) PolicyPolicyPtrOutput {
	return o.ApplyT(func(v PolicyPolicy) *PolicyPolicy {
		return &v
	}).(PolicyPolicyPtrOutput)
}
func (o PolicyPolicyOutput) ApplyTo() pulumi.StringOutput {
	return o.ApplyT(func (v PolicyPolicy) string { return v.ApplyTo }).(pulumi.StringOutput)
}

func (o PolicyPolicyOutput) Definition() pulumi.MapOutput {
	return o.ApplyT(func (v PolicyPolicy) map[string]interface{} { return v.Definition }).(pulumi.MapOutput)
}

func (o PolicyPolicyOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func (v PolicyPolicy) string { return v.Pattern }).(pulumi.StringOutput)
}

func (o PolicyPolicyOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func (v PolicyPolicy) int { return v.Priority }).(pulumi.IntOutput)
}

type PolicyPolicyPtrOutput struct { *pulumi.OutputState}

func (PolicyPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyPolicy)(nil)).Elem()
}

func (o PolicyPolicyPtrOutput) ToPolicyPolicyPtrOutput() PolicyPolicyPtrOutput {
	return o
}

func (o PolicyPolicyPtrOutput) ToPolicyPolicyPtrOutputWithContext(ctx context.Context) PolicyPolicyPtrOutput {
	return o
}

func (o PolicyPolicyPtrOutput) Elem() PolicyPolicyOutput {
	return o.ApplyT(func (v *PolicyPolicy) PolicyPolicy { return *v }).(PolicyPolicyOutput)
}

func (o PolicyPolicyPtrOutput) ApplyTo() pulumi.StringOutput {
	return o.ApplyT(func (v PolicyPolicy) string { return v.ApplyTo }).(pulumi.StringOutput)
}

func (o PolicyPolicyPtrOutput) Definition() pulumi.MapOutput {
	return o.ApplyT(func (v PolicyPolicy) map[string]interface{} { return v.Definition }).(pulumi.MapOutput)
}

func (o PolicyPolicyPtrOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func (v PolicyPolicy) string { return v.Pattern }).(pulumi.StringOutput)
}

func (o PolicyPolicyPtrOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func (v PolicyPolicy) int { return v.Priority }).(pulumi.IntOutput)
}

type QueueSettings struct {
	Arguments map[string]interface{} `pulumi:"arguments"`
	ArgumentsJson *string `pulumi:"argumentsJson"`
	AutoDelete *bool `pulumi:"autoDelete"`
	Durable *bool `pulumi:"durable"`
}

type QueueSettingsInput interface {
	pulumi.Input

	ToQueueSettingsOutput() QueueSettingsOutput
	ToQueueSettingsOutputWithContext(context.Context) QueueSettingsOutput
}

type QueueSettingsArgs struct {
	Arguments pulumi.MapInput `pulumi:"arguments"`
	ArgumentsJson pulumi.StringPtrInput `pulumi:"argumentsJson"`
	AutoDelete pulumi.BoolPtrInput `pulumi:"autoDelete"`
	Durable pulumi.BoolPtrInput `pulumi:"durable"`
}

func (QueueSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueSettings)(nil)).Elem()
}

func (i QueueSettingsArgs) ToQueueSettingsOutput() QueueSettingsOutput {
	return i.ToQueueSettingsOutputWithContext(context.Background())
}

func (i QueueSettingsArgs) ToQueueSettingsOutputWithContext(ctx context.Context) QueueSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueSettingsOutput)
}

func (i QueueSettingsArgs) ToQueueSettingsPtrOutput() QueueSettingsPtrOutput {
	return i.ToQueueSettingsPtrOutputWithContext(context.Background())
}

func (i QueueSettingsArgs) ToQueueSettingsPtrOutputWithContext(ctx context.Context) QueueSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueSettingsOutput).ToQueueSettingsPtrOutputWithContext(ctx)
}

type QueueSettingsPtrInput interface {
	pulumi.Input

	ToQueueSettingsPtrOutput() QueueSettingsPtrOutput
	ToQueueSettingsPtrOutputWithContext(context.Context) QueueSettingsPtrOutput
}

type queueSettingsPtrType QueueSettingsArgs

func QueueSettingsPtr(v *QueueSettingsArgs) QueueSettingsPtrInput {	return (*queueSettingsPtrType)(v)
}

func (*queueSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueSettings)(nil)).Elem()
}

func (i *queueSettingsPtrType) ToQueueSettingsPtrOutput() QueueSettingsPtrOutput {
	return i.ToQueueSettingsPtrOutputWithContext(context.Background())
}

func (i *queueSettingsPtrType) ToQueueSettingsPtrOutputWithContext(ctx context.Context) QueueSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueSettingsPtrOutput)
}

type QueueSettingsOutput struct { *pulumi.OutputState }

func (QueueSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueSettings)(nil)).Elem()
}

func (o QueueSettingsOutput) ToQueueSettingsOutput() QueueSettingsOutput {
	return o
}

func (o QueueSettingsOutput) ToQueueSettingsOutputWithContext(ctx context.Context) QueueSettingsOutput {
	return o
}

func (o QueueSettingsOutput) ToQueueSettingsPtrOutput() QueueSettingsPtrOutput {
	return o.ToQueueSettingsPtrOutputWithContext(context.Background())
}

func (o QueueSettingsOutput) ToQueueSettingsPtrOutputWithContext(ctx context.Context) QueueSettingsPtrOutput {
	return o.ApplyT(func(v QueueSettings) *QueueSettings {
		return &v
	}).(QueueSettingsPtrOutput)
}
func (o QueueSettingsOutput) Arguments() pulumi.MapOutput {
	return o.ApplyT(func (v QueueSettings) map[string]interface{} { return v.Arguments }).(pulumi.MapOutput)
}

func (o QueueSettingsOutput) ArgumentsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func (v QueueSettings) *string { return v.ArgumentsJson }).(pulumi.StringPtrOutput)
}

func (o QueueSettingsOutput) AutoDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v QueueSettings) *bool { return v.AutoDelete }).(pulumi.BoolPtrOutput)
}

func (o QueueSettingsOutput) Durable() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v QueueSettings) *bool { return v.Durable }).(pulumi.BoolPtrOutput)
}

type QueueSettingsPtrOutput struct { *pulumi.OutputState}

func (QueueSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueSettings)(nil)).Elem()
}

func (o QueueSettingsPtrOutput) ToQueueSettingsPtrOutput() QueueSettingsPtrOutput {
	return o
}

func (o QueueSettingsPtrOutput) ToQueueSettingsPtrOutputWithContext(ctx context.Context) QueueSettingsPtrOutput {
	return o
}

func (o QueueSettingsPtrOutput) Elem() QueueSettingsOutput {
	return o.ApplyT(func (v *QueueSettings) QueueSettings { return *v }).(QueueSettingsOutput)
}

func (o QueueSettingsPtrOutput) Arguments() pulumi.MapOutput {
	return o.ApplyT(func (v QueueSettings) map[string]interface{} { return v.Arguments }).(pulumi.MapOutput)
}

func (o QueueSettingsPtrOutput) ArgumentsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func (v QueueSettings) *string { return v.ArgumentsJson }).(pulumi.StringPtrOutput)
}

func (o QueueSettingsPtrOutput) AutoDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v QueueSettings) *bool { return v.AutoDelete }).(pulumi.BoolPtrOutput)
}

func (o QueueSettingsPtrOutput) Durable() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v QueueSettings) *bool { return v.Durable }).(pulumi.BoolPtrOutput)
}

type TopicPermissionsPermission struct {
	Exchange string `pulumi:"exchange"`
	Read string `pulumi:"read"`
	Write string `pulumi:"write"`
}

type TopicPermissionsPermissionInput interface {
	pulumi.Input

	ToTopicPermissionsPermissionOutput() TopicPermissionsPermissionOutput
	ToTopicPermissionsPermissionOutputWithContext(context.Context) TopicPermissionsPermissionOutput
}

type TopicPermissionsPermissionArgs struct {
	Exchange pulumi.StringInput `pulumi:"exchange"`
	Read pulumi.StringInput `pulumi:"read"`
	Write pulumi.StringInput `pulumi:"write"`
}

func (TopicPermissionsPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicPermissionsPermission)(nil)).Elem()
}

func (i TopicPermissionsPermissionArgs) ToTopicPermissionsPermissionOutput() TopicPermissionsPermissionOutput {
	return i.ToTopicPermissionsPermissionOutputWithContext(context.Background())
}

func (i TopicPermissionsPermissionArgs) ToTopicPermissionsPermissionOutputWithContext(ctx context.Context) TopicPermissionsPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicPermissionsPermissionOutput)
}

type TopicPermissionsPermissionArrayInput interface {
	pulumi.Input

	ToTopicPermissionsPermissionArrayOutput() TopicPermissionsPermissionArrayOutput
	ToTopicPermissionsPermissionArrayOutputWithContext(context.Context) TopicPermissionsPermissionArrayOutput
}

type TopicPermissionsPermissionArray []TopicPermissionsPermissionInput

func (TopicPermissionsPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicPermissionsPermission)(nil)).Elem()
}

func (i TopicPermissionsPermissionArray) ToTopicPermissionsPermissionArrayOutput() TopicPermissionsPermissionArrayOutput {
	return i.ToTopicPermissionsPermissionArrayOutputWithContext(context.Background())
}

func (i TopicPermissionsPermissionArray) ToTopicPermissionsPermissionArrayOutputWithContext(ctx context.Context) TopicPermissionsPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicPermissionsPermissionArrayOutput)
}

type TopicPermissionsPermissionOutput struct { *pulumi.OutputState }

func (TopicPermissionsPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicPermissionsPermission)(nil)).Elem()
}

func (o TopicPermissionsPermissionOutput) ToTopicPermissionsPermissionOutput() TopicPermissionsPermissionOutput {
	return o
}

func (o TopicPermissionsPermissionOutput) ToTopicPermissionsPermissionOutputWithContext(ctx context.Context) TopicPermissionsPermissionOutput {
	return o
}

func (o TopicPermissionsPermissionOutput) Exchange() pulumi.StringOutput {
	return o.ApplyT(func (v TopicPermissionsPermission) string { return v.Exchange }).(pulumi.StringOutput)
}

func (o TopicPermissionsPermissionOutput) Read() pulumi.StringOutput {
	return o.ApplyT(func (v TopicPermissionsPermission) string { return v.Read }).(pulumi.StringOutput)
}

func (o TopicPermissionsPermissionOutput) Write() pulumi.StringOutput {
	return o.ApplyT(func (v TopicPermissionsPermission) string { return v.Write }).(pulumi.StringOutput)
}

type TopicPermissionsPermissionArrayOutput struct { *pulumi.OutputState}

func (TopicPermissionsPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicPermissionsPermission)(nil)).Elem()
}

func (o TopicPermissionsPermissionArrayOutput) ToTopicPermissionsPermissionArrayOutput() TopicPermissionsPermissionArrayOutput {
	return o
}

func (o TopicPermissionsPermissionArrayOutput) ToTopicPermissionsPermissionArrayOutputWithContext(ctx context.Context) TopicPermissionsPermissionArrayOutput {
	return o
}

func (o TopicPermissionsPermissionArrayOutput) Index(i pulumi.IntInput) TopicPermissionsPermissionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) TopicPermissionsPermission {
		return vs[0].([]TopicPermissionsPermission)[vs[1].(int)]
	}).(TopicPermissionsPermissionOutput)
}

func init() {
	pulumi.RegisterOutputType(ExchangeSettingsOutput{})
	pulumi.RegisterOutputType(ExchangeSettingsPtrOutput{})
	pulumi.RegisterOutputType(PermissionsPermissionsOutput{})
	pulumi.RegisterOutputType(PermissionsPermissionsPtrOutput{})
	pulumi.RegisterOutputType(PolicyPolicyOutput{})
	pulumi.RegisterOutputType(PolicyPolicyPtrOutput{})
	pulumi.RegisterOutputType(QueueSettingsOutput{})
	pulumi.RegisterOutputType(QueueSettingsPtrOutput{})
	pulumi.RegisterOutputType(TopicPermissionsPermissionOutput{})
	pulumi.RegisterOutputType(TopicPermissionsPermissionArrayOutput{})
}
