// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rabbitmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-rabbitmq/sdk/v3/go/rabbitmq/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupExchange(ctx *pulumi.Context, args *LookupExchangeArgs, opts ...pulumi.InvokeOption) (*LookupExchangeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupExchangeResult
	err := ctx.Invoke("rabbitmq:index/getExchange:getExchange", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExchange.
type LookupExchangeArgs struct {
	Name  string  `pulumi:"name"`
	Vhost *string `pulumi:"vhost"`
}

// A collection of values returned by getExchange.
type LookupExchangeResult struct {
	Id       string               `pulumi:"id"`
	Name     string               `pulumi:"name"`
	Settings []GetExchangeSetting `pulumi:"settings"`
	Vhost    *string              `pulumi:"vhost"`
}

func LookupExchangeOutput(ctx *pulumi.Context, args LookupExchangeOutputArgs, opts ...pulumi.InvokeOption) LookupExchangeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupExchangeResult, error) {
			args := v.(LookupExchangeArgs)
			r, err := LookupExchange(ctx, &args, opts...)
			var s LookupExchangeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupExchangeResultOutput)
}

// A collection of arguments for invoking getExchange.
type LookupExchangeOutputArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Vhost pulumi.StringPtrInput `pulumi:"vhost"`
}

func (LookupExchangeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExchangeArgs)(nil)).Elem()
}

// A collection of values returned by getExchange.
type LookupExchangeResultOutput struct{ *pulumi.OutputState }

func (LookupExchangeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExchangeResult)(nil)).Elem()
}

func (o LookupExchangeResultOutput) ToLookupExchangeResultOutput() LookupExchangeResultOutput {
	return o
}

func (o LookupExchangeResultOutput) ToLookupExchangeResultOutputWithContext(ctx context.Context) LookupExchangeResultOutput {
	return o
}

func (o LookupExchangeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExchangeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupExchangeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExchangeResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupExchangeResultOutput) Settings() GetExchangeSettingArrayOutput {
	return o.ApplyT(func(v LookupExchangeResult) []GetExchangeSetting { return v.Settings }).(GetExchangeSettingArrayOutput)
}

func (o LookupExchangeResultOutput) Vhost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExchangeResult) *string { return v.Vhost }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExchangeResultOutput{})
}
