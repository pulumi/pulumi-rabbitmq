// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.RabbitMQ
{
    public static class GetExchange
    {
        public static Task<GetExchangeResult> InvokeAsync(GetExchangeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExchangeResult>("rabbitmq:index/getExchange:getExchange", args ?? new GetExchangeArgs(), options.WithDefaults());

        public static Output<GetExchangeResult> Invoke(GetExchangeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExchangeResult>("rabbitmq:index/getExchange:getExchange", args ?? new GetExchangeInvokeArgs(), options.WithDefaults());

        public static Output<GetExchangeResult> Invoke(GetExchangeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetExchangeResult>("rabbitmq:index/getExchange:getExchange", args ?? new GetExchangeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExchangeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("vhost")]
        public string? Vhost { get; set; }

        public GetExchangeArgs()
        {
        }
        public static new GetExchangeArgs Empty => new GetExchangeArgs();
    }

    public sealed class GetExchangeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("vhost")]
        public Input<string>? Vhost { get; set; }

        public GetExchangeInvokeArgs()
        {
        }
        public static new GetExchangeInvokeArgs Empty => new GetExchangeInvokeArgs();
    }


    [OutputType]
    public sealed class GetExchangeResult
    {
        public readonly string Id;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetExchangeSettingResult> Settings;
        public readonly string? Vhost;

        [OutputConstructor]
        private GetExchangeResult(
            string id,

            string name,

            ImmutableArray<Outputs.GetExchangeSettingResult> settings,

            string? vhost)
        {
            Id = id;
            Name = name;
            Settings = settings;
            Vhost = vhost;
        }
    }
}
