// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.RabbitMQ.Inputs
{

    public sealed class ShovelInfoArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Determines how the shovel should acknowledge messages.
        /// Defaults to `on-confirm`.
        /// </summary>
        [Input("ackMode")]
        public Input<string>? AckMode { get; set; }

        /// <summary>
        /// Whether to amqp shovel headers.
        /// Defaults to `false`.
        /// </summary>
        [Input("addForwardHeaders")]
        public Input<bool>? AddForwardHeaders { get; set; }

        /// <summary>
        /// Determines when (if ever) the shovel should delete itself .
        /// Defaults to `never`.
        /// </summary>
        [Input("deleteAfter")]
        public Input<string>? DeleteAfter { get; set; }

        /// <summary>
        /// The exchange to which messages should be published.
        /// Either this or destination_queue must be specified but not both.
        /// </summary>
        [Input("destinationExchange")]
        public Input<string>? DestinationExchange { get; set; }

        /// <summary>
        /// The routing key when using destination_exchange.
        /// </summary>
        [Input("destinationExchangeKey")]
        public Input<string>? DestinationExchangeKey { get; set; }

        /// <summary>
        /// The queue to which messages should be published.
        /// Either this or destination_exchange must be specified but not both.
        /// </summary>
        [Input("destinationQueue")]
        public Input<string>? DestinationQueue { get; set; }

        /// <summary>
        /// The amqp uri for the destination .
        /// </summary>
        [Input("destinationUri", required: true)]
        public Input<string> DestinationUri { get; set; } = null!;

        /// <summary>
        /// The maximum number of unacknowledged messages copied over a shovel at any one time.
        /// Defaults to `1000`.
        /// </summary>
        [Input("prefetchCount")]
        public Input<int>? PrefetchCount { get; set; }

        /// <summary>
        /// The duration in seconds to reconnect to a broker after disconnected.
        /// Defaults to `1`.
        /// </summary>
        [Input("reconnectDelay")]
        public Input<int>? ReconnectDelay { get; set; }

        /// <summary>
        /// The exchange from which to consume.
        /// Either this or source_queue must be specified but not both.
        /// </summary>
        [Input("sourceExchange")]
        public Input<string>? SourceExchange { get; set; }

        /// <summary>
        /// The routing key when using source_exchange.
        /// </summary>
        [Input("sourceExchangeKey")]
        public Input<string>? SourceExchangeKey { get; set; }

        /// <summary>
        /// The queue from which to consume.
        /// Either this or source_exchange must be specified but not both.
        /// </summary>
        [Input("sourceQueue")]
        public Input<string>? SourceQueue { get; set; }

        /// <summary>
        /// The amqp uri for the source.
        /// </summary>
        [Input("sourceUri", required: true)]
        public Input<string> SourceUri { get; set; } = null!;

        public ShovelInfoArgs()
        {
        }
    }
}
