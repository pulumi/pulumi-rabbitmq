// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.RabbitMQ.Outputs
{

    [OutputType]
    public sealed class ExchangeSettings
    {
        /// <summary>
        /// Additional key/value settings for the exchange.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Arguments;
        /// <summary>
        /// Whether the exchange will self-delete when all
        /// queues have finished using it.
        /// </summary>
        public readonly bool? AutoDelete;
        /// <summary>
        /// Whether the exchange survives server restarts.
        /// Defaults to `false`.
        /// </summary>
        public readonly bool? Durable;
        /// <summary>
        /// The type of exchange.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ExchangeSettings(
            ImmutableDictionary<string, string>? arguments,

            bool? autoDelete,

            bool? durable,

            string type)
        {
            Arguments = arguments;
            AutoDelete = autoDelete;
            Durable = durable;
            Type = type;
        }
    }
}
