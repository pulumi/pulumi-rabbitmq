// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.RabbitMQ.Outputs
{

    [OutputType]
    public sealed class QueueSettings
    {
        /// <summary>
        /// Additional key/value settings for the queue.
        /// All values will be sent to RabbitMQ as a string. If you require non-string
        /// values, use `arguments_json`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Arguments;
        /// <summary>
        /// A nested JSON string which contains additional
        /// settings for the queue. This is useful for when the arguments contain
        /// non-string values.
        /// </summary>
        public readonly string? ArgumentsJson;
        /// <summary>
        /// Whether the queue will self-delete when all
        /// consumers have unsubscribed.
        /// </summary>
        public readonly bool? AutoDelete;
        /// <summary>
        /// Whether the queue survives server restarts.
        /// Defaults to `false`.
        /// </summary>
        public readonly bool? Durable;

        [OutputConstructor]
        private QueueSettings(
            ImmutableDictionary<string, string>? arguments,

            string? argumentsJson,

            bool? autoDelete,

            bool? durable)
        {
            Arguments = arguments;
            ArgumentsJson = argumentsJson;
            AutoDelete = autoDelete;
            Durable = durable;
        }
    }
}
