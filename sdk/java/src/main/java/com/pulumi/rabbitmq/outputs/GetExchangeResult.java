// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rabbitmq.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.rabbitmq.outputs.GetExchangeSetting;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExchangeResult {
    private String id;
    private String name;
    private List<GetExchangeSetting> settings;
    private @Nullable String vhost;

    private GetExchangeResult() {}
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public List<GetExchangeSetting> settings() {
        return this.settings;
    }
    public Optional<String> vhost() {
        return Optional.ofNullable(this.vhost);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExchangeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private List<GetExchangeSetting> settings;
        private @Nullable String vhost;
        public Builder() {}
        public Builder(GetExchangeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.settings = defaults.settings;
    	      this.vhost = defaults.vhost;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExchangeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetExchangeResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder settings(List<GetExchangeSetting> settings) {
            if (settings == null) {
              throw new MissingRequiredPropertyException("GetExchangeResult", "settings");
            }
            this.settings = settings;
            return this;
        }
        public Builder settings(GetExchangeSetting... settings) {
            return settings(List.of(settings));
        }
        @CustomType.Setter
        public Builder vhost(@Nullable String vhost) {

            this.vhost = vhost;
            return this;
        }
        public GetExchangeResult build() {
            final var _resultValue = new GetExchangeResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.settings = settings;
            _resultValue.vhost = vhost;
            return _resultValue;
        }
    }
}
